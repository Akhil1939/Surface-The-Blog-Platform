// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Surface_Entities.Context;

#nullable disable

namespace Surface_DataAccessLayer.Migrations
{
    [DbContext(typeof(SurfaceContext))]
    [Migration("20230902074654_UserUpdate")]
    partial class UserUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Surface.Entities.DataModels.LoginProvider", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("StatusId");

                    b.ToTable("LoginProviders");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            CreatedOn = new DateTime(2023, 9, 2, 7, 46, 54, 109, DateTimeKind.Utc).AddTicks(5709),
                            ModifiedOn = new DateTime(2023, 9, 2, 7, 46, 54, 109, DateTimeKind.Utc).AddTicks(5710),
                            Name = "Custom",
                            StatusId = (byte)1
                        },
                        new
                        {
                            Id = (byte)2,
                            CreatedOn = new DateTime(2023, 9, 2, 7, 46, 54, 109, DateTimeKind.Utc).AddTicks(5713),
                            ModifiedOn = new DateTime(2023, 9, 2, 7, 46, 54, 109, DateTimeKind.Utc).AddTicks(5714),
                            Name = "Google",
                            StatusId = (byte)1
                        });
                });

            modelBuilder.Entity("Surface.Entities.DataModels.Status", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("StatusGroupId")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("StatusGroupId");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7686),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7697),
                            Name = "Active",
                            StatusGroupId = (byte)1
                        },
                        new
                        {
                            Id = (byte)2,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7701),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7702),
                            Name = "Inactive",
                            StatusGroupId = (byte)1
                        },
                        new
                        {
                            Id = (byte)3,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7704),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7705),
                            Name = "Reported",
                            StatusGroupId = (byte)1
                        },
                        new
                        {
                            Id = (byte)4,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7708),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7709),
                            Name = "Blocked",
                            StatusGroupId = (byte)1
                        },
                        new
                        {
                            Id = (byte)5,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7711),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7712),
                            Name = "Deleted",
                            StatusGroupId = (byte)1
                        },
                        new
                        {
                            Id = (byte)6,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7715),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7716),
                            Name = "Locked",
                            StatusGroupId = (byte)1
                        },
                        new
                        {
                            Id = (byte)7,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7719),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7720),
                            Name = "Planning",
                            StatusGroupId = (byte)2
                        },
                        new
                        {
                            Id = (byte)8,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7722),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7723),
                            Name = "Active",
                            StatusGroupId = (byte)2
                        },
                        new
                        {
                            Id = (byte)9,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7726),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7727),
                            Name = "On Hold",
                            StatusGroupId = (byte)2
                        },
                        new
                        {
                            Id = (byte)10,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7730),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7730),
                            Name = "Completed",
                            StatusGroupId = (byte)2
                        },
                        new
                        {
                            Id = (byte)11,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7733),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7734),
                            Name = "Cancelled",
                            StatusGroupId = (byte)2
                        },
                        new
                        {
                            Id = (byte)12,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7737),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7738),
                            Name = "To Do",
                            StatusGroupId = (byte)3
                        },
                        new
                        {
                            Id = (byte)13,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7740),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7741),
                            Name = "In Progress",
                            StatusGroupId = (byte)3
                        },
                        new
                        {
                            Id = (byte)14,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7744),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7745),
                            Name = "Blocked",
                            StatusGroupId = (byte)3
                        },
                        new
                        {
                            Id = (byte)15,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7747),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7748),
                            Name = "Completed",
                            StatusGroupId = (byte)3
                        },
                        new
                        {
                            Id = (byte)16,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7751),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7752),
                            Name = "Deferred",
                            StatusGroupId = (byte)3
                        },
                        new
                        {
                            Id = (byte)17,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7754),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7755),
                            Name = "Idea",
                            StatusGroupId = (byte)4
                        },
                        new
                        {
                            Id = (byte)18,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7758),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7759),
                            Name = "Backlog",
                            StatusGroupId = (byte)4
                        },
                        new
                        {
                            Id = (byte)19,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7761),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7762),
                            Name = "In Progress",
                            StatusGroupId = (byte)4
                        },
                        new
                        {
                            Id = (byte)20,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7765),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7766),
                            Name = "Testing",
                            StatusGroupId = (byte)4
                        },
                        new
                        {
                            Id = (byte)21,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7769),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7769),
                            Name = "Released",
                            StatusGroupId = (byte)4
                        },
                        new
                        {
                            Id = (byte)22,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7772),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7773),
                            Name = "Reported",
                            StatusGroupId = (byte)5
                        },
                        new
                        {
                            Id = (byte)23,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7776),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7776),
                            Name = "In Progress",
                            StatusGroupId = (byte)5
                        },
                        new
                        {
                            Id = (byte)24,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7779),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7780),
                            Name = "Reproduced",
                            StatusGroupId = (byte)5
                        },
                        new
                        {
                            Id = (byte)25,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7783),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7783),
                            Name = "Fixed",
                            StatusGroupId = (byte)5
                        },
                        new
                        {
                            Id = (byte)26,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7786),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(7787),
                            Name = "Verified",
                            StatusGroupId = (byte)5
                        });
                });

            modelBuilder.Entity("Surface.Entities.DataModels.StatusGroup", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StatusGroups");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(3060),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(3078),
                            Name = "User"
                        },
                        new
                        {
                            Id = (byte)2,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(3083),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(3085),
                            Name = "Project"
                        },
                        new
                        {
                            Id = (byte)3,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(3088),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(3089),
                            Name = "Task"
                        },
                        new
                        {
                            Id = (byte)4,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(3092),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(3093),
                            Name = "Feature"
                        },
                        new
                        {
                            Id = (byte)5,
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(3096),
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 102, DateTimeKind.Local).AddTicks(3097),
                            Name = "Bug"
                        });
                });

            modelBuilder.Entity("Surface.Entities.DataModels.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte>("AccessFailedCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LockedOutEndDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("LoginProviderId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("LoginProviderId");

                    b.HasIndex("StatusId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AccessFailedCount = (byte)0,
                            Avatar = "",
                            CreatedOn = new DateTime(2023, 9, 2, 13, 16, 54, 112, DateTimeKind.Local).AddTicks(6268),
                            Email = "admin@gmail.com",
                            FirstName = "admin",
                            LoginProviderId = (byte)1,
                            ModifiedOn = new DateTime(2023, 9, 2, 13, 16, 54, 112, DateTimeKind.Local).AddTicks(6283),
                            Password = "5652DDF6EA419A920A948A4BBA99A1B48B434D1237218FCF8D2DA2DA41E7C0F4046BC10C12ABDA86D09022B2AD1D6F566F82F3DF72CDFAEE40AB154537DFB8FD",
                            Salt = "+QA9bkBDYMlaPDTRzIYMoPeMDd9oa9k/Ay4Lg==",
                            StatusId = (byte)1
                        });
                });

            modelBuilder.Entity("Surface.Entities.DataModels.LoginProvider", b =>
                {
                    b.HasOne("Surface.Entities.DataModels.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Surface.Entities.DataModels.Status", b =>
                {
                    b.HasOne("Surface.Entities.DataModels.StatusGroup", "StatusGroup")
                        .WithMany()
                        .HasForeignKey("StatusGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("StatusGroup");
                });

            modelBuilder.Entity("Surface.Entities.DataModels.User", b =>
                {
                    b.HasOne("Surface.Entities.DataModels.LoginProvider", "LoginProvider")
                        .WithMany()
                        .HasForeignKey("LoginProviderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Surface.Entities.DataModels.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("LoginProvider");

                    b.Navigation("Status");
                });
#pragma warning restore 612, 618
        }
    }
}
