// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Surface_Entities.Context;

#nullable disable

namespace Surface_DataAccessLayer.Migrations
{
    [DbContext(typeof(SurfaceContext))]
    [Migration("20230904104401_project")]
    partial class project
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Surface.Entities.DataModels.LoginProvider", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("StatusId");

                    b.ToTable("LoginProviders");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            CreatedOn = new DateTime(2023, 9, 4, 10, 44, 1, 480, DateTimeKind.Utc).AddTicks(9623),
                            ModifiedOn = new DateTime(2023, 9, 4, 10, 44, 1, 480, DateTimeKind.Utc).AddTicks(9623),
                            Name = "Custom",
                            StatusId = (byte)1
                        },
                        new
                        {
                            Id = (byte)2,
                            CreatedOn = new DateTime(2023, 9, 4, 10, 44, 1, 480, DateTimeKind.Utc).AddTicks(9627),
                            ModifiedOn = new DateTime(2023, 9, 4, 10, 44, 1, 480, DateTimeKind.Utc).AddTicks(9627),
                            Name = "Google",
                            StatusId = (byte)1
                        });
                });

            modelBuilder.Entity("Surface.Entities.DataModels.Status", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("StatusGroupId")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("StatusGroupId");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6885),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6889),
                            Name = "Active",
                            StatusGroupId = (byte)1
                        },
                        new
                        {
                            Id = (byte)2,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6892),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6893),
                            Name = "Inactive",
                            StatusGroupId = (byte)1
                        },
                        new
                        {
                            Id = (byte)3,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6896),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6897),
                            Name = "Reported",
                            StatusGroupId = (byte)1
                        },
                        new
                        {
                            Id = (byte)4,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6900),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6901),
                            Name = "Blocked",
                            StatusGroupId = (byte)1
                        },
                        new
                        {
                            Id = (byte)5,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6903),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6904),
                            Name = "Deleted",
                            StatusGroupId = (byte)1
                        },
                        new
                        {
                            Id = (byte)6,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6907),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6908),
                            Name = "Locked",
                            StatusGroupId = (byte)1
                        },
                        new
                        {
                            Id = (byte)7,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6911),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6912),
                            Name = "Planning",
                            StatusGroupId = (byte)2
                        },
                        new
                        {
                            Id = (byte)8,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6914),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6915),
                            Name = "Active",
                            StatusGroupId = (byte)2
                        },
                        new
                        {
                            Id = (byte)9,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6918),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6918),
                            Name = "On Hold",
                            StatusGroupId = (byte)2
                        },
                        new
                        {
                            Id = (byte)10,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6921),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6922),
                            Name = "Completed",
                            StatusGroupId = (byte)2
                        },
                        new
                        {
                            Id = (byte)11,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6924),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6925),
                            Name = "Cancelled",
                            StatusGroupId = (byte)2
                        },
                        new
                        {
                            Id = (byte)12,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6928),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6929),
                            Name = "To Do",
                            StatusGroupId = (byte)3
                        },
                        new
                        {
                            Id = (byte)13,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6931),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6932),
                            Name = "In Progress",
                            StatusGroupId = (byte)3
                        },
                        new
                        {
                            Id = (byte)14,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6935),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6935),
                            Name = "Blocked",
                            StatusGroupId = (byte)3
                        },
                        new
                        {
                            Id = (byte)15,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6938),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6939),
                            Name = "Completed",
                            StatusGroupId = (byte)3
                        },
                        new
                        {
                            Id = (byte)16,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6941),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6942),
                            Name = "Deferred",
                            StatusGroupId = (byte)3
                        },
                        new
                        {
                            Id = (byte)17,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6945),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6946),
                            Name = "Idea",
                            StatusGroupId = (byte)4
                        },
                        new
                        {
                            Id = (byte)18,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6948),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6949),
                            Name = "Backlog",
                            StatusGroupId = (byte)4
                        },
                        new
                        {
                            Id = (byte)19,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6952),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6952),
                            Name = "In Progress",
                            StatusGroupId = (byte)4
                        },
                        new
                        {
                            Id = (byte)20,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6955),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6956),
                            Name = "Testing",
                            StatusGroupId = (byte)4
                        },
                        new
                        {
                            Id = (byte)21,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6958),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6959),
                            Name = "Released",
                            StatusGroupId = (byte)4
                        },
                        new
                        {
                            Id = (byte)22,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6961),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6962),
                            Name = "Reported",
                            StatusGroupId = (byte)5
                        },
                        new
                        {
                            Id = (byte)23,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6965),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6966),
                            Name = "In Progress",
                            StatusGroupId = (byte)5
                        },
                        new
                        {
                            Id = (byte)24,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6968),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6969),
                            Name = "Reproduced",
                            StatusGroupId = (byte)5
                        },
                        new
                        {
                            Id = (byte)25,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6972),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6972),
                            Name = "Fixed",
                            StatusGroupId = (byte)5
                        },
                        new
                        {
                            Id = (byte)26,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6975),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(6976),
                            Name = "Verified",
                            StatusGroupId = (byte)5
                        });
                });

            modelBuilder.Entity("Surface.Entities.DataModels.StatusGroup", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StatusGroups");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(4111),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(4126),
                            Name = "User"
                        },
                        new
                        {
                            Id = (byte)2,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(4130),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(4131),
                            Name = "Project"
                        },
                        new
                        {
                            Id = (byte)3,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(4133),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(4134),
                            Name = "Task"
                        },
                        new
                        {
                            Id = (byte)4,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(4136),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(4137),
                            Name = "Feature"
                        },
                        new
                        {
                            Id = (byte)5,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(4140),
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 480, DateTimeKind.Local).AddTicks(4140),
                            Name = "Bug"
                        });
                });

            modelBuilder.Entity("Surface.Entities.DataModels.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte>("AccessFailedCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LockedOutEndDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("LoginProviderId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("LoginProviderId");

                    b.HasIndex("StatusId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AccessFailedCount = (byte)0,
                            Avatar = "",
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 483, DateTimeKind.Local).AddTicks(4557),
                            Email = "admin@gmail.com",
                            FirstName = "admin",
                            LoginProviderId = (byte)1,
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 483, DateTimeKind.Local).AddTicks(4568),
                            Password = "5652DDF6EA419A920A948A4BBA99A1B48B434D1237218FCF8D2DA2DA41E7C0F4046BC10C12ABDA86D09022B2AD1D6F566F82F3DF72CDFAEE40AB154537DFB8FD",
                            Salt = "+QA9bkBDYMlaPDTRzIYMoPeMDd9oa9k/Ay4Lg==",
                            StatusId = (byte)1
                        });
                });

            modelBuilder.Entity("Surface.Entities.DataModels.UserRole", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            CreatedOn = new DateTime(2023, 9, 4, 10, 44, 1, 483, DateTimeKind.Utc).AddTicks(6396),
                            ModifiedOn = new DateTime(2023, 9, 4, 10, 44, 1, 483, DateTimeKind.Utc).AddTicks(6397),
                            Name = "ProjectManager"
                        },
                        new
                        {
                            Id = (byte)2,
                            CreatedOn = new DateTime(2023, 9, 4, 10, 44, 1, 483, DateTimeKind.Utc).AddTicks(6400),
                            ModifiedOn = new DateTime(2023, 9, 4, 10, 44, 1, 483, DateTimeKind.Utc).AddTicks(6401),
                            Name = "ProjectMember"
                        },
                        new
                        {
                            Id = (byte)3,
                            CreatedOn = new DateTime(2023, 9, 4, 10, 44, 1, 483, DateTimeKind.Utc).AddTicks(6403),
                            ModifiedOn = new DateTime(2023, 9, 4, 10, 44, 1, 483, DateTimeKind.Utc).AddTicks(6404),
                            Name = "ProjectViewer"
                        },
                        new
                        {
                            Id = (byte)4,
                            CreatedOn = new DateTime(2023, 9, 4, 10, 44, 1, 483, DateTimeKind.Utc).AddTicks(6406),
                            ModifiedOn = new DateTime(2023, 9, 4, 10, 44, 1, 483, DateTimeKind.Utc).AddTicks(6407),
                            Name = "ProjectAdmin"
                        },
                        new
                        {
                            Id = (byte)5,
                            CreatedOn = new DateTime(2023, 9, 4, 10, 44, 1, 483, DateTimeKind.Utc).AddTicks(6409),
                            ModifiedOn = new DateTime(2023, 9, 4, 10, 44, 1, 483, DateTimeKind.Utc).AddTicks(6410),
                            Name = "TeamLeader"
                        },
                        new
                        {
                            Id = (byte)6,
                            CreatedOn = new DateTime(2023, 9, 4, 10, 44, 1, 483, DateTimeKind.Utc).AddTicks(6412),
                            ModifiedOn = new DateTime(2023, 9, 4, 10, 44, 1, 483, DateTimeKind.Utc).AddTicks(6413),
                            Name = "Developer"
                        },
                        new
                        {
                            Id = (byte)7,
                            CreatedOn = new DateTime(2023, 9, 4, 10, 44, 1, 483, DateTimeKind.Utc).AddTicks(6415),
                            ModifiedOn = new DateTime(2023, 9, 4, 10, 44, 1, 483, DateTimeKind.Utc).AddTicks(6416),
                            Name = "QAEngineer"
                        },
                        new
                        {
                            Id = (byte)8,
                            CreatedOn = new DateTime(2023, 9, 4, 10, 44, 1, 483, DateTimeKind.Utc).AddTicks(6418),
                            ModifiedOn = new DateTime(2023, 9, 4, 10, 44, 1, 483, DateTimeKind.Utc).AddTicks(6418),
                            Name = "BusinessAnalyst"
                        });
                });

            modelBuilder.Entity("Surface_Entities.Entities.Project", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Budget")
                        .HasColumnType("float");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepoLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("StatusId")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("StatusId");

                    b.ToTable("Project");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ActualStartDate = new DateTime(2023, 9, 4, 16, 14, 1, 485, DateTimeKind.Local).AddTicks(2932),
                            Budget = 5000.0,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 485, DateTimeKind.Local).AddTicks(2947),
                            Description = "This is a demo project that all users are in this project",
                            EndDate = new DateTime(2024, 2, 4, 16, 14, 1, 485, DateTimeKind.Local).AddTicks(2936),
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 485, DateTimeKind.Local).AddTicks(2949),
                            Name = "Surface",
                            StartDate = new DateTime(2023, 9, 4, 16, 14, 1, 485, DateTimeKind.Local).AddTicks(2920),
                            StatusId = (byte)8
                        },
                        new
                        {
                            Id = 2L,
                            ActualStartDate = new DateTime(2023, 9, 4, 16, 14, 1, 485, DateTimeKind.Local).AddTicks(2954),
                            Budget = 10000.0,
                            CreatedBy = 4L,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 485, DateTimeKind.Local).AddTicks(2958),
                            Description = "A new development project",
                            EndDate = new DateTime(2023, 12, 4, 16, 14, 1, 485, DateTimeKind.Local).AddTicks(2955),
                            ModifiedBy = 4L,
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 485, DateTimeKind.Local).AddTicks(2959),
                            Name = "Project A",
                            RepoLink = "https://github.com/projecta",
                            StartDate = new DateTime(2023, 9, 4, 16, 14, 1, 485, DateTimeKind.Local).AddTicks(2953),
                            StatusId = (byte)8
                        },
                        new
                        {
                            Id = 3L,
                            ActualStartDate = new DateTime(2023, 9, 4, 16, 14, 1, 485, DateTimeKind.Local).AddTicks(2963),
                            Budget = 7500.0,
                            CreatedBy = 3L,
                            CreatedOn = new DateTime(2023, 9, 4, 16, 14, 1, 485, DateTimeKind.Local).AddTicks(2966),
                            Description = "Another project for testing",
                            EndDate = new DateTime(2023, 11, 4, 16, 14, 1, 485, DateTimeKind.Local).AddTicks(2964),
                            ModifiedBy = 3L,
                            ModifiedOn = new DateTime(2023, 9, 4, 16, 14, 1, 485, DateTimeKind.Local).AddTicks(2967),
                            Name = "Project B",
                            RepoLink = "https://github.com/projectb",
                            StartDate = new DateTime(2023, 9, 4, 16, 14, 1, 485, DateTimeKind.Local).AddTicks(2962),
                            StatusId = (byte)8
                        });
                });

            modelBuilder.Entity("Surface.Entities.DataModels.LoginProvider", b =>
                {
                    b.HasOne("Surface.Entities.DataModels.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Surface.Entities.DataModels.Status", b =>
                {
                    b.HasOne("Surface.Entities.DataModels.StatusGroup", "StatusGroup")
                        .WithMany()
                        .HasForeignKey("StatusGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("StatusGroup");
                });

            modelBuilder.Entity("Surface.Entities.DataModels.User", b =>
                {
                    b.HasOne("Surface.Entities.DataModels.LoginProvider", "LoginProvider")
                        .WithMany()
                        .HasForeignKey("LoginProviderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Surface.Entities.DataModels.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("LoginProvider");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Surface_Entities.Entities.Project", b =>
                {
                    b.HasOne("Surface.Entities.DataModels.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Surface.Entities.DataModels.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Surface.Entities.DataModels.Status", "Statuses")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("ModifiedByUser");

                    b.Navigation("Statuses");
                });
#pragma warning restore 612, 618
        }
    }
}
