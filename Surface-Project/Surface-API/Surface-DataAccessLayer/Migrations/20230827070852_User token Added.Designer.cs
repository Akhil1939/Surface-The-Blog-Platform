// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Surface_Entities.Context;

#nullable disable

namespace Surface_DataAccessLayer.Migrations
{
    [DbContext(typeof(SurfaceContext))]
    [Migration("20230827070852_User token Added")]
    partial class UsertokenAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Surface.Entities.DataModels.LoginProvider", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("StatusId");

                    b.ToTable("LoginProviders");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            CreatedOn = new DateTime(2023, 8, 27, 7, 8, 52, 462, DateTimeKind.Utc).AddTicks(261),
                            ModifiedOn = new DateTime(2023, 8, 27, 7, 8, 52, 462, DateTimeKind.Utc).AddTicks(261),
                            Name = "Custom",
                            StatusId = (byte)1
                        },
                        new
                        {
                            Id = (byte)2,
                            CreatedOn = new DateTime(2023, 8, 27, 7, 8, 52, 462, DateTimeKind.Utc).AddTicks(266),
                            ModifiedOn = new DateTime(2023, 8, 27, 7, 8, 52, 462, DateTimeKind.Utc).AddTicks(266),
                            Name = "Google",
                            StatusId = (byte)1
                        });
                });

            modelBuilder.Entity("Surface.Entities.DataModels.Status", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("StatusGroupId")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("StatusGroupId");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4580),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4585),
                            Name = "Active",
                            StatusGroupId = (byte)1
                        },
                        new
                        {
                            Id = (byte)2,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4648),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4649),
                            Name = "Inactive",
                            StatusGroupId = (byte)1
                        },
                        new
                        {
                            Id = (byte)3,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4652),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4652),
                            Name = "Reported",
                            StatusGroupId = (byte)1
                        },
                        new
                        {
                            Id = (byte)4,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4655),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4656),
                            Name = "Blocked",
                            StatusGroupId = (byte)1
                        },
                        new
                        {
                            Id = (byte)5,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4658),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4659),
                            Name = "Deleted",
                            StatusGroupId = (byte)1
                        },
                        new
                        {
                            Id = (byte)6,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4662),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4662),
                            Name = "Locked",
                            StatusGroupId = (byte)1
                        },
                        new
                        {
                            Id = (byte)7,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4665),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4666),
                            Name = "Planning",
                            StatusGroupId = (byte)2
                        },
                        new
                        {
                            Id = (byte)8,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4668),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4669),
                            Name = "Active",
                            StatusGroupId = (byte)2
                        },
                        new
                        {
                            Id = (byte)9,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4671),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4672),
                            Name = "On Hold",
                            StatusGroupId = (byte)2
                        },
                        new
                        {
                            Id = (byte)10,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4674),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4675),
                            Name = "Completed",
                            StatusGroupId = (byte)2
                        },
                        new
                        {
                            Id = (byte)11,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4678),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4679),
                            Name = "Cancelled",
                            StatusGroupId = (byte)2
                        },
                        new
                        {
                            Id = (byte)12,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4681),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4682),
                            Name = "To Do",
                            StatusGroupId = (byte)3
                        },
                        new
                        {
                            Id = (byte)13,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4684),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4685),
                            Name = "In Progress",
                            StatusGroupId = (byte)3
                        },
                        new
                        {
                            Id = (byte)14,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4687),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4688),
                            Name = "Blocked",
                            StatusGroupId = (byte)3
                        },
                        new
                        {
                            Id = (byte)15,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4691),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4691),
                            Name = "Completed",
                            StatusGroupId = (byte)3
                        },
                        new
                        {
                            Id = (byte)16,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4694),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4694),
                            Name = "Deferred",
                            StatusGroupId = (byte)3
                        },
                        new
                        {
                            Id = (byte)17,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4697),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4698),
                            Name = "Idea",
                            StatusGroupId = (byte)4
                        },
                        new
                        {
                            Id = (byte)18,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4700),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4701),
                            Name = "Backlog",
                            StatusGroupId = (byte)4
                        },
                        new
                        {
                            Id = (byte)19,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4703),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4704),
                            Name = "In Progress",
                            StatusGroupId = (byte)4
                        },
                        new
                        {
                            Id = (byte)20,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4707),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4707),
                            Name = "Testing",
                            StatusGroupId = (byte)4
                        },
                        new
                        {
                            Id = (byte)21,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4710),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4711),
                            Name = "Released",
                            StatusGroupId = (byte)4
                        },
                        new
                        {
                            Id = (byte)22,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4713),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4714),
                            Name = "Reported",
                            StatusGroupId = (byte)5
                        },
                        new
                        {
                            Id = (byte)23,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4717),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4717),
                            Name = "In Progress",
                            StatusGroupId = (byte)5
                        },
                        new
                        {
                            Id = (byte)24,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4720),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4721),
                            Name = "Reproduced",
                            StatusGroupId = (byte)5
                        },
                        new
                        {
                            Id = (byte)25,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4723),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4724),
                            Name = "Fixed",
                            StatusGroupId = (byte)5
                        },
                        new
                        {
                            Id = (byte)26,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4726),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(4727),
                            Name = "Verified",
                            StatusGroupId = (byte)5
                        });
                });

            modelBuilder.Entity("Surface.Entities.DataModels.StatusGroup", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StatusGroups");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(1812),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(1830),
                            Name = "User"
                        },
                        new
                        {
                            Id = (byte)2,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(1833),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(1834),
                            Name = "Project"
                        },
                        new
                        {
                            Id = (byte)3,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(1837),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(1838),
                            Name = "Task"
                        },
                        new
                        {
                            Id = (byte)4,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(1840),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(1841),
                            Name = "Feature"
                        },
                        new
                        {
                            Id = (byte)5,
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(1843),
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 460, DateTimeKind.Local).AddTicks(1844),
                            Name = "Bug"
                        });
                });

            modelBuilder.Entity("Surface.Entities.DataModels.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte>("AccessFailedCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("LockedOutEndDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("LoginProviderId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("LoginProviderId");

                    b.HasIndex("StatusId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AccessFailedCount = (byte)0,
                            Avatar = "",
                            CreatedOn = new DateTime(2023, 8, 27, 12, 38, 52, 471, DateTimeKind.Local).AddTicks(85),
                            Email = "admin@gmail.com",
                            LoginProviderId = (byte)1,
                            ModifiedOn = new DateTime(2023, 8, 27, 12, 38, 52, 471, DateTimeKind.Local).AddTicks(97),
                            Password = "5652DDF6EA419A920A948A4BBA99A1B48B434D1237218FCF8D2DA2DA41E7C0F4046BC10C12ABDA86D09022B2AD1D6F566F82F3DF72CDFAEE40AB154537DFB8FD",
                            Salt = "+QA9bkBDYMlaPDTRzIYMoPeMDd9oa9k/Ay4Lg==",
                            StatusId = (byte)1
                        });
                });

            modelBuilder.Entity("Surface.Entities.DataModels.LoginProvider", b =>
                {
                    b.HasOne("Surface.Entities.DataModels.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Surface.Entities.DataModels.Status", b =>
                {
                    b.HasOne("Surface.Entities.DataModels.StatusGroup", "StatusGroup")
                        .WithMany()
                        .HasForeignKey("StatusGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("StatusGroup");
                });

            modelBuilder.Entity("Surface.Entities.DataModels.User", b =>
                {
                    b.HasOne("Surface.Entities.DataModels.LoginProvider", "LoginProvider")
                        .WithMany()
                        .HasForeignKey("LoginProviderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Surface.Entities.DataModels.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("LoginProvider");

                    b.Navigation("Status");
                });
#pragma warning restore 612, 618
        }
    }
}
