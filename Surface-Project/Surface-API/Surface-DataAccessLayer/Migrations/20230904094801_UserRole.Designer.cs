// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Surface_Entities.Context;

#nullable disable

namespace Surface_DataAccessLayer.Migrations
{
    [DbContext(typeof(SurfaceContext))]
    [Migration("20230904094801_UserRole")]
    partial class UserRole
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Surface.Entities.DataModels.LoginProvider", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("StatusId");

                    b.ToTable("LoginProviders");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            CreatedOn = new DateTime(2023, 9, 4, 9, 48, 1, 502, DateTimeKind.Utc).AddTicks(9532),
                            ModifiedOn = new DateTime(2023, 9, 4, 9, 48, 1, 502, DateTimeKind.Utc).AddTicks(9533),
                            Name = "Custom",
                            StatusId = (byte)1
                        },
                        new
                        {
                            Id = (byte)2,
                            CreatedOn = new DateTime(2023, 9, 4, 9, 48, 1, 502, DateTimeKind.Utc).AddTicks(9536),
                            ModifiedOn = new DateTime(2023, 9, 4, 9, 48, 1, 502, DateTimeKind.Utc).AddTicks(9536),
                            Name = "Google",
                            StatusId = (byte)1
                        });
                });

            modelBuilder.Entity("Surface.Entities.DataModels.Status", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("StatusGroupId")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("StatusGroupId");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2848),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2858),
                            Name = "Active",
                            StatusGroupId = (byte)1
                        },
                        new
                        {
                            Id = (byte)2,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2862),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2863),
                            Name = "Inactive",
                            StatusGroupId = (byte)1
                        },
                        new
                        {
                            Id = (byte)3,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2866),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2867),
                            Name = "Reported",
                            StatusGroupId = (byte)1
                        },
                        new
                        {
                            Id = (byte)4,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2871),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2872),
                            Name = "Blocked",
                            StatusGroupId = (byte)1
                        },
                        new
                        {
                            Id = (byte)5,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2875),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2876),
                            Name = "Deleted",
                            StatusGroupId = (byte)1
                        },
                        new
                        {
                            Id = (byte)6,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2879),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2881),
                            Name = "Locked",
                            StatusGroupId = (byte)1
                        },
                        new
                        {
                            Id = (byte)7,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2884),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2885),
                            Name = "Planning",
                            StatusGroupId = (byte)2
                        },
                        new
                        {
                            Id = (byte)8,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2888),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2889),
                            Name = "Active",
                            StatusGroupId = (byte)2
                        },
                        new
                        {
                            Id = (byte)9,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2892),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2893),
                            Name = "On Hold",
                            StatusGroupId = (byte)2
                        },
                        new
                        {
                            Id = (byte)10,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2896),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2897),
                            Name = "Completed",
                            StatusGroupId = (byte)2
                        },
                        new
                        {
                            Id = (byte)11,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2900),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2901),
                            Name = "Cancelled",
                            StatusGroupId = (byte)2
                        },
                        new
                        {
                            Id = (byte)12,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2904),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2905),
                            Name = "To Do",
                            StatusGroupId = (byte)3
                        },
                        new
                        {
                            Id = (byte)13,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2908),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2909),
                            Name = "In Progress",
                            StatusGroupId = (byte)3
                        },
                        new
                        {
                            Id = (byte)14,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2912),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2913),
                            Name = "Blocked",
                            StatusGroupId = (byte)3
                        },
                        new
                        {
                            Id = (byte)15,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2916),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2917),
                            Name = "Completed",
                            StatusGroupId = (byte)3
                        },
                        new
                        {
                            Id = (byte)16,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2920),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2921),
                            Name = "Deferred",
                            StatusGroupId = (byte)3
                        },
                        new
                        {
                            Id = (byte)17,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2924),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2925),
                            Name = "Idea",
                            StatusGroupId = (byte)4
                        },
                        new
                        {
                            Id = (byte)18,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2928),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2929),
                            Name = "Backlog",
                            StatusGroupId = (byte)4
                        },
                        new
                        {
                            Id = (byte)19,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2932),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2933),
                            Name = "In Progress",
                            StatusGroupId = (byte)4
                        },
                        new
                        {
                            Id = (byte)20,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2935),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2936),
                            Name = "Testing",
                            StatusGroupId = (byte)4
                        },
                        new
                        {
                            Id = (byte)21,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2940),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2941),
                            Name = "Released",
                            StatusGroupId = (byte)4
                        },
                        new
                        {
                            Id = (byte)22,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2944),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2945),
                            Name = "Reported",
                            StatusGroupId = (byte)5
                        },
                        new
                        {
                            Id = (byte)23,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2948),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2949),
                            Name = "In Progress",
                            StatusGroupId = (byte)5
                        },
                        new
                        {
                            Id = (byte)24,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2952),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2953),
                            Name = "Reproduced",
                            StatusGroupId = (byte)5
                        },
                        new
                        {
                            Id = (byte)25,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2956),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2957),
                            Name = "Fixed",
                            StatusGroupId = (byte)5
                        },
                        new
                        {
                            Id = (byte)26,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2960),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 502, DateTimeKind.Local).AddTicks(2961),
                            Name = "Verified",
                            StatusGroupId = (byte)5
                        });
                });

            modelBuilder.Entity("Surface.Entities.DataModels.StatusGroup", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StatusGroups");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 501, DateTimeKind.Local).AddTicks(8223),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 501, DateTimeKind.Local).AddTicks(8240),
                            Name = "User"
                        },
                        new
                        {
                            Id = (byte)2,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 501, DateTimeKind.Local).AddTicks(8246),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 501, DateTimeKind.Local).AddTicks(8247),
                            Name = "Project"
                        },
                        new
                        {
                            Id = (byte)3,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 501, DateTimeKind.Local).AddTicks(8251),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 501, DateTimeKind.Local).AddTicks(8252),
                            Name = "Task"
                        },
                        new
                        {
                            Id = (byte)4,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 501, DateTimeKind.Local).AddTicks(8256),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 501, DateTimeKind.Local).AddTicks(8257),
                            Name = "Feature"
                        },
                        new
                        {
                            Id = (byte)5,
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 501, DateTimeKind.Local).AddTicks(8260),
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 501, DateTimeKind.Local).AddTicks(8261),
                            Name = "Bug"
                        });
                });

            modelBuilder.Entity("Surface.Entities.DataModels.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte>("AccessFailedCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LockedOutEndDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("LoginProviderId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("LoginProviderId");

                    b.HasIndex("StatusId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AccessFailedCount = (byte)0,
                            Avatar = "",
                            CreatedOn = new DateTime(2023, 9, 4, 15, 18, 1, 505, DateTimeKind.Local).AddTicks(4124),
                            Email = "admin@gmail.com",
                            FirstName = "admin",
                            LoginProviderId = (byte)1,
                            ModifiedOn = new DateTime(2023, 9, 4, 15, 18, 1, 505, DateTimeKind.Local).AddTicks(4140),
                            Password = "5652DDF6EA419A920A948A4BBA99A1B48B434D1237218FCF8D2DA2DA41E7C0F4046BC10C12ABDA86D09022B2AD1D6F566F82F3DF72CDFAEE40AB154537DFB8FD",
                            Salt = "+QA9bkBDYMlaPDTRzIYMoPeMDd9oa9k/Ay4Lg==",
                            StatusId = (byte)1
                        });
                });

            modelBuilder.Entity("Surface.Entities.DataModels.UserRole", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            CreatedOn = new DateTime(2023, 9, 4, 9, 48, 1, 505, DateTimeKind.Utc).AddTicks(6225),
                            ModifiedOn = new DateTime(2023, 9, 4, 9, 48, 1, 505, DateTimeKind.Utc).AddTicks(6226),
                            Name = "ProjectManager"
                        },
                        new
                        {
                            Id = (byte)2,
                            CreatedOn = new DateTime(2023, 9, 4, 9, 48, 1, 505, DateTimeKind.Utc).AddTicks(6229),
                            ModifiedOn = new DateTime(2023, 9, 4, 9, 48, 1, 505, DateTimeKind.Utc).AddTicks(6229),
                            Name = "ProjectMember"
                        },
                        new
                        {
                            Id = (byte)3,
                            CreatedOn = new DateTime(2023, 9, 4, 9, 48, 1, 505, DateTimeKind.Utc).AddTicks(6232),
                            ModifiedOn = new DateTime(2023, 9, 4, 9, 48, 1, 505, DateTimeKind.Utc).AddTicks(6232),
                            Name = "ProjectViewer"
                        },
                        new
                        {
                            Id = (byte)4,
                            CreatedOn = new DateTime(2023, 9, 4, 9, 48, 1, 505, DateTimeKind.Utc).AddTicks(6235),
                            ModifiedOn = new DateTime(2023, 9, 4, 9, 48, 1, 505, DateTimeKind.Utc).AddTicks(6235),
                            Name = "ProjectAdmin"
                        },
                        new
                        {
                            Id = (byte)5,
                            CreatedOn = new DateTime(2023, 9, 4, 9, 48, 1, 505, DateTimeKind.Utc).AddTicks(6237),
                            ModifiedOn = new DateTime(2023, 9, 4, 9, 48, 1, 505, DateTimeKind.Utc).AddTicks(6238),
                            Name = "TeamLeader"
                        },
                        new
                        {
                            Id = (byte)6,
                            CreatedOn = new DateTime(2023, 9, 4, 9, 48, 1, 505, DateTimeKind.Utc).AddTicks(6240),
                            ModifiedOn = new DateTime(2023, 9, 4, 9, 48, 1, 505, DateTimeKind.Utc).AddTicks(6241),
                            Name = "Developer"
                        },
                        new
                        {
                            Id = (byte)7,
                            CreatedOn = new DateTime(2023, 9, 4, 9, 48, 1, 505, DateTimeKind.Utc).AddTicks(6243),
                            ModifiedOn = new DateTime(2023, 9, 4, 9, 48, 1, 505, DateTimeKind.Utc).AddTicks(6244),
                            Name = "QAEngineer"
                        },
                        new
                        {
                            Id = (byte)8,
                            CreatedOn = new DateTime(2023, 9, 4, 9, 48, 1, 505, DateTimeKind.Utc).AddTicks(6246),
                            ModifiedOn = new DateTime(2023, 9, 4, 9, 48, 1, 505, DateTimeKind.Utc).AddTicks(6247),
                            Name = "BusinessAnalyst"
                        });
                });

            modelBuilder.Entity("Surface.Entities.DataModels.LoginProvider", b =>
                {
                    b.HasOne("Surface.Entities.DataModels.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Surface.Entities.DataModels.Status", b =>
                {
                    b.HasOne("Surface.Entities.DataModels.StatusGroup", "StatusGroup")
                        .WithMany()
                        .HasForeignKey("StatusGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("StatusGroup");
                });

            modelBuilder.Entity("Surface.Entities.DataModels.User", b =>
                {
                    b.HasOne("Surface.Entities.DataModels.LoginProvider", "LoginProvider")
                        .WithMany()
                        .HasForeignKey("LoginProviderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Surface.Entities.DataModels.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("LoginProvider");

                    b.Navigation("Status");
                });
#pragma warning restore 612, 618
        }
    }
}
