// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Surface_Entities.Context;

#nullable disable

namespace Surface_DataAccessLayer.Migrations
{
    [DbContext(typeof(SurfaceContext))]
    [Migration("20230904115217_Customer Story")]
    partial class CustomerStory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Surface.Entities.DataModels.LoginProvider", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("StatusId");

                    b.ToTable("LoginProviders");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            CreatedOn = new DateTime(2023, 9, 4, 11, 52, 16, 963, DateTimeKind.Utc).AddTicks(8451),
                            ModifiedOn = new DateTime(2023, 9, 4, 11, 52, 16, 963, DateTimeKind.Utc).AddTicks(8452),
                            Name = "Custom",
                            StatusId = (byte)1
                        },
                        new
                        {
                            Id = (byte)2,
                            CreatedOn = new DateTime(2023, 9, 4, 11, 52, 16, 963, DateTimeKind.Utc).AddTicks(8455),
                            ModifiedOn = new DateTime(2023, 9, 4, 11, 52, 16, 963, DateTimeKind.Utc).AddTicks(8456),
                            Name = "Google",
                            StatusId = (byte)1
                        });
                });

            modelBuilder.Entity("Surface.Entities.DataModels.Status", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("StatusGroupId")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("StatusGroupId");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4756),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4762),
                            Name = "Active",
                            StatusGroupId = (byte)1
                        },
                        new
                        {
                            Id = (byte)2,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4765),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4766),
                            Name = "Inactive",
                            StatusGroupId = (byte)1
                        },
                        new
                        {
                            Id = (byte)3,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4769),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4770),
                            Name = "Reported",
                            StatusGroupId = (byte)1
                        },
                        new
                        {
                            Id = (byte)4,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4773),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4773),
                            Name = "Blocked",
                            StatusGroupId = (byte)1
                        },
                        new
                        {
                            Id = (byte)5,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4776),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4777),
                            Name = "Deleted",
                            StatusGroupId = (byte)1
                        },
                        new
                        {
                            Id = (byte)6,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4780),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4780),
                            Name = "Locked",
                            StatusGroupId = (byte)1
                        },
                        new
                        {
                            Id = (byte)7,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4783),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4784),
                            Name = "Planning",
                            StatusGroupId = (byte)2
                        },
                        new
                        {
                            Id = (byte)8,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4787),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4787),
                            Name = "Active",
                            StatusGroupId = (byte)2
                        },
                        new
                        {
                            Id = (byte)9,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4790),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4791),
                            Name = "On Hold",
                            StatusGroupId = (byte)2
                        },
                        new
                        {
                            Id = (byte)10,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4794),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4794),
                            Name = "Completed",
                            StatusGroupId = (byte)2
                        },
                        new
                        {
                            Id = (byte)11,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4797),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4798),
                            Name = "Cancelled",
                            StatusGroupId = (byte)2
                        },
                        new
                        {
                            Id = (byte)12,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4801),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4801),
                            Name = "To Do",
                            StatusGroupId = (byte)3
                        },
                        new
                        {
                            Id = (byte)13,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4804),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4805),
                            Name = "In Progress",
                            StatusGroupId = (byte)3
                        },
                        new
                        {
                            Id = (byte)14,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4807),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4808),
                            Name = "Blocked",
                            StatusGroupId = (byte)3
                        },
                        new
                        {
                            Id = (byte)15,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4811),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4812),
                            Name = "Completed",
                            StatusGroupId = (byte)3
                        },
                        new
                        {
                            Id = (byte)16,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4814),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4815),
                            Name = "Deferred",
                            StatusGroupId = (byte)3
                        },
                        new
                        {
                            Id = (byte)17,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4818),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4819),
                            Name = "Idea",
                            StatusGroupId = (byte)4
                        },
                        new
                        {
                            Id = (byte)18,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4821),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4822),
                            Name = "Backlog",
                            StatusGroupId = (byte)4
                        },
                        new
                        {
                            Id = (byte)19,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4825),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4826),
                            Name = "In Progress",
                            StatusGroupId = (byte)4
                        },
                        new
                        {
                            Id = (byte)20,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4828),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4829),
                            Name = "Testing",
                            StatusGroupId = (byte)4
                        },
                        new
                        {
                            Id = (byte)21,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4832),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4833),
                            Name = "Released",
                            StatusGroupId = (byte)4
                        },
                        new
                        {
                            Id = (byte)22,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4835),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4836),
                            Name = "Reported",
                            StatusGroupId = (byte)5
                        },
                        new
                        {
                            Id = (byte)23,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4838),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4839),
                            Name = "In Progress",
                            StatusGroupId = (byte)5
                        },
                        new
                        {
                            Id = (byte)24,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4842),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4843),
                            Name = "Reproduced",
                            StatusGroupId = (byte)5
                        },
                        new
                        {
                            Id = (byte)25,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4845),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4846),
                            Name = "Fixed",
                            StatusGroupId = (byte)5
                        },
                        new
                        {
                            Id = (byte)26,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4849),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4850),
                            Name = "Verified",
                            StatusGroupId = (byte)5
                        },
                        new
                        {
                            Id = (byte)27,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4852),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4853),
                            Name = "Pending",
                            StatusGroupId = (byte)6
                        },
                        new
                        {
                            Id = (byte)28,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4856),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4856),
                            Name = "Reviewed",
                            StatusGroupId = (byte)6
                        },
                        new
                        {
                            Id = (byte)29,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4859),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4860),
                            Name = "In Progress",
                            StatusGroupId = (byte)6
                        },
                        new
                        {
                            Id = (byte)30,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4862),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(4863),
                            Name = "Closed",
                            StatusGroupId = (byte)6
                        });
                });

            modelBuilder.Entity("Surface.Entities.DataModels.StatusGroup", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StatusGroups");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(1826),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(1846),
                            Name = "User"
                        },
                        new
                        {
                            Id = (byte)2,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(1850),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(1851),
                            Name = "Project"
                        },
                        new
                        {
                            Id = (byte)3,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(1854),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(1855),
                            Name = "Task"
                        },
                        new
                        {
                            Id = (byte)4,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(1857),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(1858),
                            Name = "Feature"
                        },
                        new
                        {
                            Id = (byte)5,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(1861),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(1861),
                            Name = "Bug"
                        },
                        new
                        {
                            Id = (byte)6,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(1864),
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 963, DateTimeKind.Local).AddTicks(1865),
                            Name = "Customer Story"
                        });
                });

            modelBuilder.Entity("Surface.Entities.DataModels.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte>("AccessFailedCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LockedOutEndDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("LoginProviderId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("LoginProviderId");

                    b.HasIndex("StatusId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AccessFailedCount = (byte)0,
                            Avatar = "",
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 966, DateTimeKind.Local).AddTicks(517),
                            Email = "admin@gmail.com",
                            FirstName = "admin",
                            LoginProviderId = (byte)1,
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 966, DateTimeKind.Local).AddTicks(530),
                            Password = "5652DDF6EA419A920A948A4BBA99A1B48B434D1237218FCF8D2DA2DA41E7C0F4046BC10C12ABDA86D09022B2AD1D6F566F82F3DF72CDFAEE40AB154537DFB8FD",
                            Salt = "+QA9bkBDYMlaPDTRzIYMoPeMDd9oa9k/Ay4Lg==",
                            StatusId = (byte)1
                        });
                });

            modelBuilder.Entity("Surface.Entities.DataModels.UserRole", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            CreatedOn = new DateTime(2023, 9, 4, 11, 52, 16, 966, DateTimeKind.Utc).AddTicks(2666),
                            ModifiedOn = new DateTime(2023, 9, 4, 11, 52, 16, 966, DateTimeKind.Utc).AddTicks(2667),
                            Name = "ProjectManager"
                        },
                        new
                        {
                            Id = (byte)2,
                            CreatedOn = new DateTime(2023, 9, 4, 11, 52, 16, 966, DateTimeKind.Utc).AddTicks(2670),
                            ModifiedOn = new DateTime(2023, 9, 4, 11, 52, 16, 966, DateTimeKind.Utc).AddTicks(2671),
                            Name = "ProjectMember"
                        },
                        new
                        {
                            Id = (byte)3,
                            CreatedOn = new DateTime(2023, 9, 4, 11, 52, 16, 966, DateTimeKind.Utc).AddTicks(2673),
                            ModifiedOn = new DateTime(2023, 9, 4, 11, 52, 16, 966, DateTimeKind.Utc).AddTicks(2674),
                            Name = "ProjectViewer"
                        },
                        new
                        {
                            Id = (byte)4,
                            CreatedOn = new DateTime(2023, 9, 4, 11, 52, 16, 966, DateTimeKind.Utc).AddTicks(2676),
                            ModifiedOn = new DateTime(2023, 9, 4, 11, 52, 16, 966, DateTimeKind.Utc).AddTicks(2677),
                            Name = "ProjectAdmin"
                        },
                        new
                        {
                            Id = (byte)5,
                            CreatedOn = new DateTime(2023, 9, 4, 11, 52, 16, 966, DateTimeKind.Utc).AddTicks(2679),
                            ModifiedOn = new DateTime(2023, 9, 4, 11, 52, 16, 966, DateTimeKind.Utc).AddTicks(2680),
                            Name = "TeamLeader"
                        },
                        new
                        {
                            Id = (byte)6,
                            CreatedOn = new DateTime(2023, 9, 4, 11, 52, 16, 966, DateTimeKind.Utc).AddTicks(2682),
                            ModifiedOn = new DateTime(2023, 9, 4, 11, 52, 16, 966, DateTimeKind.Utc).AddTicks(2682),
                            Name = "Developer"
                        },
                        new
                        {
                            Id = (byte)7,
                            CreatedOn = new DateTime(2023, 9, 4, 11, 52, 16, 966, DateTimeKind.Utc).AddTicks(2685),
                            ModifiedOn = new DateTime(2023, 9, 4, 11, 52, 16, 966, DateTimeKind.Utc).AddTicks(2685),
                            Name = "QAEngineer"
                        },
                        new
                        {
                            Id = (byte)8,
                            CreatedOn = new DateTime(2023, 9, 4, 11, 52, 16, 966, DateTimeKind.Utc).AddTicks(2688),
                            ModifiedOn = new DateTime(2023, 9, 4, 11, 52, 16, 966, DateTimeKind.Utc).AddTicks(2688),
                            Name = "BusinessAnalyst"
                        });
                });

            modelBuilder.Entity("Surface_Entities.Entities.Project", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Budget")
                        .HasColumnType("float");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepoLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("StatusId")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("StatusId");

                    b.ToTable("Project");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ActualStartDate = new DateTime(2023, 9, 4, 17, 22, 16, 968, DateTimeKind.Local).AddTicks(3713),
                            Budget = 5000.0,
                            CreatedBy = 1L,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 968, DateTimeKind.Local).AddTicks(3727),
                            Description = "This is a demo project that all users are in this project",
                            EndDate = new DateTime(2024, 2, 4, 17, 22, 16, 968, DateTimeKind.Local).AddTicks(3717),
                            ModifiedBy = 1L,
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 968, DateTimeKind.Local).AddTicks(3730),
                            Name = "Surface",
                            StartDate = new DateTime(2023, 9, 4, 17, 22, 16, 968, DateTimeKind.Local).AddTicks(3700),
                            StatusId = (byte)8
                        },
                        new
                        {
                            Id = 2L,
                            ActualStartDate = new DateTime(2023, 9, 4, 17, 22, 16, 968, DateTimeKind.Local).AddTicks(3734),
                            Budget = 10000.0,
                            CreatedBy = 4L,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 968, DateTimeKind.Local).AddTicks(3738),
                            Description = "A new development project",
                            EndDate = new DateTime(2023, 12, 4, 17, 22, 16, 968, DateTimeKind.Local).AddTicks(3736),
                            ModifiedBy = 4L,
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 968, DateTimeKind.Local).AddTicks(3739),
                            Name = "Project A",
                            RepoLink = "https://github.com/projecta",
                            StartDate = new DateTime(2023, 9, 4, 17, 22, 16, 968, DateTimeKind.Local).AddTicks(3733),
                            StatusId = (byte)8
                        },
                        new
                        {
                            Id = 3L,
                            ActualStartDate = new DateTime(2023, 9, 4, 17, 22, 16, 968, DateTimeKind.Local).AddTicks(3744),
                            Budget = 7500.0,
                            CreatedBy = 3L,
                            CreatedOn = new DateTime(2023, 9, 4, 17, 22, 16, 968, DateTimeKind.Local).AddTicks(3747),
                            Description = "Another project for testing",
                            EndDate = new DateTime(2023, 11, 4, 17, 22, 16, 968, DateTimeKind.Local).AddTicks(3745),
                            ModifiedBy = 3L,
                            ModifiedOn = new DateTime(2023, 9, 4, 17, 22, 16, 968, DateTimeKind.Local).AddTicks(3748),
                            Name = "Project B",
                            RepoLink = "https://github.com/projectb",
                            StartDate = new DateTime(2023, 9, 4, 17, 22, 16, 968, DateTimeKind.Local).AddTicks(3742),
                            StatusId = (byte)8
                        });
                });

            modelBuilder.Entity("Surface.Entities.DataModels.LoginProvider", b =>
                {
                    b.HasOne("Surface.Entities.DataModels.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Surface.Entities.DataModels.Status", b =>
                {
                    b.HasOne("Surface.Entities.DataModels.StatusGroup", "StatusGroup")
                        .WithMany()
                        .HasForeignKey("StatusGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("StatusGroup");
                });

            modelBuilder.Entity("Surface.Entities.DataModels.User", b =>
                {
                    b.HasOne("Surface.Entities.DataModels.LoginProvider", "LoginProvider")
                        .WithMany()
                        .HasForeignKey("LoginProviderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Surface.Entities.DataModels.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("LoginProvider");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Surface_Entities.Entities.Project", b =>
                {
                    b.HasOne("Surface.Entities.DataModels.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Surface.Entities.DataModels.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Surface.Entities.DataModels.Status", "Statuses")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("ModifiedByUser");

                    b.Navigation("Statuses");
                });
#pragma warning restore 612, 618
        }
    }
}
